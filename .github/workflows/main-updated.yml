name: Generate and Release ISO ( updated )

on: 
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Allow manual triggering

jobs:
  gen_iso:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/void-linux/void-glibc-full:latest
      options: --privileged
    defaults:
      run:
        shell: sh
    steps:
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Install dependencies for actions/checkout@v3
        run: |
          xbps-install --yes -Su xbps
          xbps-install --yes -S libstdc++

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set repository for xbps
        run: |
          chmod +x ./set_repository.sh
          ./set_repository.sh

      - name: Install dependencies
        run: |
          chmod +x ./install_dependencies.sh
          ./install_dependencies.sh

      - name: Generate ISO
        run: |
          chmod +x ./gen.sh
          ./gen.sh

      - name: List artifacts
        run: ls -alh /root/void-mklive/

      - name: Upload ISO as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: void-live-x86_64-${{ env.DATE }}-${{ github.sha }}.iso
          path: /root/void-mklive/void-live-x86_64-*.iso

  release:
    runs-on: ubuntu-latest
    needs: gen_iso  # Ensure this job runs after the gen_iso job

    steps:
      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download ISO Artifact
        uses: actions/download-artifact@v2
        with:
          name: void-live-x86_64-${{ env.DATE }}-${{ github.sha }}.iso

      - name: Create Tag
        id: create_tag
        run: |
          git tag v${{ env.DATE }}
          git push origin v${{ env.DATE }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.DATE }}
          release_name: Release v${{ env.DATE }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Upload ISO to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: void-live-x86_64-${{ env.DATE }}-${{ github.sha }}.iso  # Path to the downloaded ISO
          asset_name: void-live-x86_64-${{ env.DATE }}-${{ github.sha }}.iso  # Name for the uploaded asset
          asset_content_type: application/octet-stream
